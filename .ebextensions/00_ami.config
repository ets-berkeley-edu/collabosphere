#
# AWS configuration for the SuiteC load balancer and EC2 instances.
#
packages:
  yum:
    cairo: []
    cairo-devel: []
    giflib-devel: []
    libjpeg-turbo-devel: []
    mod24_ssl: []
    postgresql94-devel: []

option_settings:
  # Application health checks must be made over SSL.
  aws:elasticbeanstalk:application:
    Application Healthcheck URL: HTTPS:443/

  aws:elasticbeanstalk:container:nodejs:
    NodeVersion: 6.9.1
    ProxyServer: apache
    NodeCommand: 'node_modules/.bin/forever -a -m 10 app.js'

  # The load balancer listens on a secure connection, decrypts to do its work, and re-encrypts for a secure
  # connection to EC2 instances.
  aws:elb:listener:443:
    SSLCertificateId: arn:aws:acm:us-west-2:234923831700:certificate/46735ef4-18d4-41c3-8e5f-0fe42ee251b4
    ListenerProtocol: HTTPS
    InstancePort: 443
    InstanceProtocol: HTTPS

  aws:elb:loadbalancer:
    SecurityGroups: '`{ "Ref" : "loadbalancersg" }`'
    ManagedSecurityGroup: '`{ "Ref" : "loadbalancersg" }`'

  aws:elb:policies:backendencryption:
    PublicKeyPolicyNames: backendkey
    InstancePorts: 443

  # The load balancer expects this public key on the EC2 instances (see 01_create_apache_conf.config).
  aws:elb:policies:backendkey:
    PublicKey: |
      -----BEGIN CERTIFICATE-----
      MIIEIjCCAwoCCQCwhQUqTb0YaDANBgkqhkiG9w0BAQUFADCB0jELMAkGA1UEBhMC
      VVMxEzARBgNVBAgTCkNhbGlmb3JuaWExETAPBgNVBAcTCEJlcmtlbGV5MSEwHwYD
      VQQKExhVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWExKDAmBgNVBAsTH0VkdWNhdGlv
      bmFsIFRlY2hub2xvZ3kgU2VydmljZXMxIDAeBgNVBAMTF2V0cy1iZXJrZWxleS1z
      dWl0ZWMubmV0MSwwKgYJKoZIhvcNAQkBFh1hd3Mtc3VpdGVjQGxpc3RzLmJlcmtl
      bGV5LmVkdTAeFw0xNzAxMzAyMTMyNDFaFw0xODAxMzAyMTMyNDFaMIHSMQswCQYD
      VQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTERMA8GA1UEBxMIQmVya2VsZXkx
      ITAfBgNVBAoTGFVuaXZlcnNpdHkgb2YgQ2FsaWZvcm5pYTEoMCYGA1UECxMfRWR1
      Y2F0aW9uYWwgVGVjaG5vbG9neSBTZXJ2aWNlczEgMB4GA1UEAxMXZXRzLWJlcmtl
      bGV5LXN1aXRlYy5uZXQxLDAqBgkqhkiG9w0BCQEWHWF3cy1zdWl0ZWNAbGlzdHMu
      YmVya2VsZXkuZWR1MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmiwl
      d0KYQsyPczI9NYX9+lywQOU4jUFuls/VyN/WV9iwNYnIe3PI2kGcuVjwGNA2c1NK
      WAjFUH4Ylbv0UjbXE2kPTIP7haJ+MzOWIuRP6xMyh6VBbw58y91btmDBts1KxeFt
      uho2SQ/K6W+obZRAAGvwy//ejL5H5KU9MDhFSfhvr1Obo5Dl4KtJ6Q3RyM33PUxl
      vFUUSyJq15vFkTS2081Ezj6grP4rDSwgWPpe3Nx7Qij1tbnWsNUhq34BiKUlTGo+
      3zks+y0CRs2vqFBbBbziHc7T6sXi5hf9FpIw1fDY08a7bdJ96oDKX79UuAWwoK2E
      AFeE8pPnAcpNq/BrrQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQAXm7iNjbbmA0hm
      pYmatH7rYyt3x/cMIPk+JqAE5Wl7LX3AWs+VJUEQfmx7eH/OlIuH1DZG0JYELmDw
      yf0os30rNk1zz4+HT6+QdkikqVXWLljK3/F2UcLRQ1QxAUhhQZyjEA0S/QCeA+Um
      qQQ3IN3HNqsQtW2s9lZh3lULtjQPjiaxA0bHE7wpfDqZ7/3pqYVqDbDgSea7KK7a
      dlAHiyP7+LP4U00bQp/m1Hb5ykT/rLMjiVwqFpB+YjCsUsuPYq1UTLNA2zh7mvJP
      BhNKFR9+k+Kpl9YBcbLGoC67OPLjPUIdrBLu660JInFuItCiiq6w4aLBPUDGblgy
      8JH5mCAF
      -----END CERTIFICATE-----

Resources:

  # The load balancer listens on port 443 from any source.
  loadbalancersg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: load balancer security group
      VpcId: vpc-264dc841
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  # The load balancer initiates connections on port 443 only to destinations in the EC2 instance security group.
  httpsToBackendInstances: 
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: {"Fn::GetAtt" : ["loadbalancersg", "GroupId"]}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      DestinationSecurityGroupId: {"Fn::GetAtt" : ["AWSEBSecurityGroup", "GroupId"]}

  # EC2 instances accept connections on port 443 only from the load balancer.
  httpsFromLoadBalancerSG: 
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["AWSEBSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      SourceSecurityGroupId: {"Fn::GetAtt" : ["loadbalancersg", "GroupId"]}

  # Instances may download protected files from a private S3 bucket. 
  AWSEBAutoScalingGroup:
    Metadata:
      AWS::CloudFormation::Authentication:
        S3Auth:
          type: "s3"
          buckets: ["elasticbeanstalk-us-west-2-234923831700"]
          roleName: 
            "Fn::GetOptionSetting": 
              Namespace: "aws:autoscaling:launchconfiguration"
              OptionName: "IamInstanceProfile"
              DefaultValue: "aws-elasticbeanstalk-ec2-role"

/**
 * Copyright 2015 UC Berkeley (UCB) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var Collabosphere = require('col-core');
var CollabosphereServer = require('col-core/lib/server');

var LtiAPI = require('./api');

// Don't apply CSRF on the /lti/* endpoints as Canvas uses iframed POSTs to launch a tool
CollabosphereServer.addSafePathPrefix('/lti/');

/*!
 * The launch URL for the Asset Library tool
 */
Collabosphere.ltiRouter.post('/assetlibrary', function(req, res) {
  LtiAPI.launch(req, function(err, body, user) {
    if (err) {
      return res.status(err.code).send(err.msg);
    }

    var api_domain = body.custom_canvas_api_domain;
    var course_id = body.custom_canvas_course_id;

    // We store the user id in cookie specific to the canvas api domain and course. This
    // allows the user to open multiple tools (on multiple Canvas instances) concurrently
    var name = api_domain + '_' + course_id;
    res.cookie(name, user.id, {'signed': true});

    // Redirect the user to the tool's HTML. We need to include the api_domain
    // and course id so the application can bootstrap itself
    var url = '/tools/assetlibrary/index.html';
    url += '?api_domain=' + body.custom_canvas_api_domain;
    url += '&course_id=' + body.custom_canvas_course_id;
    return res.redirect(url);
  });
});

/*!
 * Describes how the Asset Library tool can be embedded
 */
Collabosphere.ltiRouter.get('/assetlibrary.xml', function(req, res) {
  var xml = LtiAPI.getAssetLibraryCartridge(req.headers.host);

  // Return the XML cartridge
  res.setHeader('Content-Type', 'application/xml');
  return res.status(200).send(xml);
});

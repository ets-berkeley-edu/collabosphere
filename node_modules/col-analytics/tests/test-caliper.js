/**
 * Copyright Â©2017. The Regents of the University of California (Regents). All Rights Reserved.
 *
 * Permission to use, copy, modify, and distribute this software and its documentation
 * for educational, research, and not-for-profit purposes, without fee and without a
 * signed licensing agreement, is hereby granted, provided that the above copyright
 * notice, this paragraph and the following two paragraphs appear in all copies,
 * modifications, and distributions.
 *
 * Contact The Office of Technology Licensing, UC Berkeley, 2150 Shattuck Avenue,
 * Suite 510, Berkeley, CA 94720-1620, (510) 643-7201, otl@berkeley.edu,
 * http://ipira.berkeley.edu/industry-info for commercial licensing opportunities.
 *
 * IN NO EVENT SHALL REGENTS BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, SPECIAL,
 * INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS, ARISING OUT OF
 * THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF REGENTS HAS BEEN ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * REGENTS SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE
 * SOFTWARE AND ACCOMPANYING DOCUMENTATION, IF ANY, PROVIDED HEREUNDER IS PROVIDED
 * "AS IS". REGENTS HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
 * ENHANCEMENTS, OR MODIFICATIONS.
 */

var _ = require('lodash');
var util = require('util');

var AssetsTestsUtil = require('col-assets/tests/util');
var AnalyticsTestsUtil = require('./util');
var LtiTestsUtil = require('col-lti/tests/util');
var TestsUtil = require('col-tests');

describe('Analytics', function() {
  describe('Caliper', function() {

    describe('LTI launch events', function() {

      it('tracks an Asset Library launch', function(callback) {
        var client = TestsUtil.getAnonymousClient();
        var course = TestsUtil.generateCourse(global.tests.canvas.ucberkeley);
        var user = TestsUtil.generateUser(global.tests.canvas.ucberkeley);

        AnalyticsTestsUtil.expectCaliperEvent(user, course, {
          'type': 'NavigationEvent',
          'action': 'NavigatedTo',
          'object': {
            'id': 'http://suitec.berkeley/lti/assetlibrary.xml',
            'type': 'SoftwareApplication',
            'name': 'Asset Library'
          }
        });

        AnalyticsTestsUtil.onExpectationResult(callback);

        LtiTestsUtil.assertAssetLibraryLaunchSucceeds(client, course, user, _.noop);
      });

      it('tracks an Engagement Index launch', function(callback) {
        var client = TestsUtil.getAnonymousClient();
        var course = TestsUtil.generateCourse(global.tests.canvas.ucberkeley);
        var user = TestsUtil.generateUser(global.tests.canvas.ucberkeley);

        AnalyticsTestsUtil.expectCaliperEvent(user, course, {
          'type': 'NavigationEvent',
          'action': 'NavigatedTo',
          'object': {
            'id': 'http://suitec.berkeley/lti/engagementindex.xml',
            'type': 'SoftwareApplication',
            'name': 'Engagement Index'
          }
        });

        AnalyticsTestsUtil.onExpectationResult(callback);

        LtiTestsUtil.assertEngagementIndexLaunchSucceeds(client, course, user, _.noop);
      });

      it('tracks a Whiteboards launch', function(callback) {
        var client = TestsUtil.getAnonymousClient();
        var course = TestsUtil.generateCourse(global.tests.canvas.ucberkeley);
        var user = TestsUtil.generateUser(global.tests.canvas.ucberkeley);

        AnalyticsTestsUtil.expectCaliperEvent(user, course, {
          'type': 'NavigationEvent',
          'action': 'NavigatedTo',
          'object': {
            'id': 'http://suitec.berkeley/lti/whiteboards.xml',
            'type': 'SoftwareApplication',
            'name': 'Whiteboards'
          }
        });

        AnalyticsTestsUtil.onExpectationResult(callback);

        LtiTestsUtil.assertWhiteboardsLaunchSucceeds(client, course, user, _.noop);
      });

      it('tracks an Impact Studio launch', function(callback) {
        var client = TestsUtil.getAnonymousClient();
        var course = TestsUtil.generateCourse(global.tests.canvas.ucberkeley);
        var user = TestsUtil.generateUser(global.tests.canvas.ucberkeley);

        AnalyticsTestsUtil.expectCaliperEvent(user, course, {
          'type': 'NavigationEvent',
          'action': 'NavigatedTo',
          'object': {
            'id': 'http://suitec.berkeley/lti/dashboard.xml',
            'type': 'SoftwareApplication',
            'name': 'Impact Studio'
          }
        });

        AnalyticsTestsUtil.onExpectationResult(callback);

        LtiTestsUtil.assertDashboardLaunchSucceeds(client, course, user, _.noop);
      });
    });

    describe('Asset library view events', function() {

      it('tracks an Asset Library listing', function(callback) {
        AnalyticsTestsUtil.allowCaliperEvents(function(event) {
          return (event.action === 'NavigatedTo' || event.action === 'Created');
        });

        TestsUtil.getAssetLibraryClient(null, null, null, function(client, course, user) {
          AssetsTestsUtil.assertCreateLink(client, course, 'UC Davis', 'http://www.ucdavis.edu/', null, function(asset1) {
            AssetsTestsUtil.assertCreateLink(client, course, 'UC Irvine', 'http://www.uci.edu/', null, function(asset2) {

              AnalyticsTestsUtil.expectCaliperEvent(user, course, {
                'type': 'ViewEvent',
                'action': 'Viewed',
                'object': {
                  'id': util.format('http://suitec.berkeley/api/%s/%s/assets', course.canvas.canvas_api_domain, course.id),
                  'type': 'DigitalResourceCollection'
                },
                'extensions': {
                  'assetQueryOffset': 0,
                  'assetQueryTotal': 2
                }
              });

              AnalyticsTestsUtil.onExpectationResult(callback);

              AssetsTestsUtil.assertGetAssets(client, course, null, null, null, null, 2, _.noop);
            });
          });
        });
      });

      it('tracks an Asset Library search', function(callback) {
        AnalyticsTestsUtil.allowCaliperEvents(function(event) {
          return (event.action === 'NavigatedTo' || event.action === 'Created');
        });

        TestsUtil.getAssetLibraryClient(null, null, null, function(client, course, user) {
          AssetsTestsUtil.assertCreateLink(client, course, 'UC Davis', 'http://www.ucdavis.edu/', null, function(asset1) {
            AssetsTestsUtil.assertCreateLink(client, course, 'UC Irvine', 'http://www.uci.edu/', null, function(asset2) {

              AnalyticsTestsUtil.expectCaliperEvent(user, course, {
                'type': 'Event',
                'action': 'Searched',
                'object': {
                  'id': util.format('http://suitec.berkeley/api/%s/%s/assets', course.canvas.canvas_api_domain, course.id),
                  'type': 'DigitalResourceCollection'
                },
                'extensions': {
                  'assetQueryOffset': 0,
                  'assetQueryTotal': 1,
                  'assetSearchKeywords': 'irvine'
                }
              });

              AnalyticsTestsUtil.onExpectationResult(callback);

              AssetsTestsUtil.assertGetAssets(client, course, {'keywords': 'irvine'}, null, null, null, 1, _.noop);
            });
          });
        });
      });

      it('tracks an asset view', function(callback) {
        AnalyticsTestsUtil.allowCaliperEvents(function(event) {
          return (event.action === 'NavigatedTo' || event.action === 'Created');
        });

        TestsUtil.getAssetLibraryClient(null, null, null, function(client, course, user) {
          AssetsTestsUtil.assertCreateLink(client, course, 'UC Davis', 'http://www.ucdavis.edu/', null, function(asset) {

            AnalyticsTestsUtil.expectCaliperEvent(user, course, {
              'type': 'ViewEvent',
              'action': 'Viewed',
              'object': {
                'id': util.format('http://suitec.berkeley/api/%s/%s/assets/%s', course.canvas.canvas_api_domain, course.id, asset.id),
                'type': 'DigitalResource',
                'name': 'UC Davis',
                'creators': [
                  {
                    'id': util.format('http://%s/users/%s', course.canvas.canvas_api_domain, user.id),
                    'type': 'Person',
                    'name': user.fullName
                  }
                ],
                'extensions': {
                  'assetType': 'link',
                  'assetUrl': 'http://www.ucdavis.edu/',
                  'assetCommentCount': 0,
                  'assetLikeCount': 0,
                  'assetPinCount': 0,
                  'assetViewCount': 0
                }
              }
            });

            AnalyticsTestsUtil.onExpectationResult(callback);

            AssetsTestsUtil.assertGetAsset(client, course, asset.id, asset, 0, _.noop);
          });
        });
      });
    });

    describe('Asset creation and modification', function() {

      it('tracks link asset creation', function(callback) {
        AnalyticsTestsUtil.allowCaliperEvents(function(event) {
          return (event.action === 'NavigatedTo');
        });

        TestsUtil.getAssetLibraryClient(null, null, null, function(client, course, user) {
          var linkTitle = 'UC Berkeley';
          var linkUrl = 'http://www.berkeley.edu';
          var linkProperties = {
            'description': 'University of California, Berkeley homepage',
            'source': 'http://www.universityofcalifornia.edu/uc-system'
          };

          AnalyticsTestsUtil.expectCaliperEvent(user, course, {
            'type': 'Event',
            'action': 'Created',
            'object': {
              'type': 'DigitalResource',
              'name': linkTitle,
              'description': linkProperties.description,
              'creators': [
                {
                  'id': util.format('http://%s/users/%s', course.canvas.canvas_api_domain, user.id),
                  'type': 'Person',
                  'name': user.fullName
                }
              ],
              'extensions': {
                'assetSource': linkProperties.source,
                'assetType': 'link',
                'assetUrl': linkUrl
              }
            },
            'extensions': {
              'assetCreationViaBookmarklet': false
            }
          });

          AnalyticsTestsUtil.onExpectationResult(callback);

          AssetsTestsUtil.assertCreateLink(client, course, linkTitle, linkUrl, linkProperties, _.noop);
        });
      });

      it('tracks file asset creation', function(callback) {
        AnalyticsTestsUtil.allowCaliperEvents(function(event) {
          return (event.action === 'NavigatedTo');
        });

        TestsUtil.getAssetLibraryClient(null, null, null, function(client, course, user) {

          var expectImageWithTitle = function(title) {
            AnalyticsTestsUtil.expectCaliperEvent(user, course, {
              'type': 'Event',
              'action': 'Created',
              'object': {
                'type': 'ImageObject',
                'creators': [
                  {
                    'id': util.format('http://%s/users/%s', course.canvas.canvas_api_domain, user.id),
                    'type': 'Person',
                    'name': user.fullName
                  }
                ],
                'extensions': {
                  'assetType': 'file'
                }
              }
            });
          };
          expectImageWithTitle('UC Davis');
          expectImageWithTitle('logo-ucberkeley.png');
          expectImageWithTitle('UC Berkeley');

          AnalyticsTestsUtil.onExpectationResult(callback);

          AssetsTestsUtil.assertFileCreateAndStorage(client, course, _.noop);
        });
      });

      it('tracks asset modification', function(callback) {
        AnalyticsTestsUtil.allowCaliperEvents(function(event) {
          return (event.action === 'NavigatedTo' || event.action === 'Created');
        });

        TestsUtil.getAssetLibraryClient(null, null, null, function(client, course, user) {
          AssetsTestsUtil.assertCreateLink(client, course, 'UC Davis', 'http://www.berkeley.edu/', null, function(asset) {

            var modifiedTitle = 'UC Berkeley';
            var modifiedDescription = 'University of California, Berkeley';

            AnalyticsTestsUtil.expectCaliperEvent(user, course, {
              'type': 'Event',
              'action': 'Modified',
              'object': {
                'id': util.format('http://suitec.berkeley/api/%s/%s/assets/%s', course.canvas.canvas_api_domain, course.id, asset.id),
                'type': 'DigitalResource',
                'name': modifiedTitle,
                'description': modifiedDescription,
                'creators': [
                  {
                    'id': util.format('http://%s/users/%s', course.canvas.canvas_api_domain, user.id),
                    'type': 'Person',
                    'name': user.fullName
                  }
                ]
              }
            });

            AnalyticsTestsUtil.onExpectationResult(callback);

            AssetsTestsUtil.assertEditAsset(client, course, asset.id, modifiedTitle, {'description': modifiedDescription}, _.noop);
          });
        });
      });

    });
  });
});

/**
 * Copyright 2015 UC Berkeley (UCB) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('lodash');
var assert = require('assert');
var config = require('config');

/**
 * Assert tht the configuration feed has all expected properties
 *
 * @param  {Object}             configuration                 The configuration feed
 * @throws {AssertionError}                                   Error thrown when an assertion failed
 */
var assertConfiguration = function(configuration) {
  assert.ok(configuration);

  // Assert that all expected Mixpanel config values are present
  assert.ok(configuration.analytics);
  assert.ok(_.isBoolean(configuration.analytics.enabled));
  assert.strictEqual(configuration.analytics.enabled, config.get('analytics.enabled'));
  assert.ok(configuration.analytics.apiKey);
  assert.strictEqual(configuration.analytics.apiKey, config.get('analytics.apiKey'));
};

/**
 * Assert that the configuration feed can be retrieved
 *
 * @param  {RestClient}         client                          The REST client to make the request with
 * @param  {Course}             course                          The Canvas course in which the user is interacting with the API
 * @param  {Function}           callback                        Standard callback function
 * @param  {Object}             callback.configuration          The configuration feed
 * @throws {AssertionError}                                     Error thrown when an assertion failed
 */
var assertGetConfiguration = module.exports.assertGetConfiguration = function(client, course, callback) {
  client.config.getConfiguration(course, function(err, configuration) {
    assert.ok(!err);
    assert.ok(configuration);
    assertConfiguration(configuration);

    return callback(configuration);
  });
};


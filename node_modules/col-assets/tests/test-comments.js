/**
 * Copyright 2015 UC Berkeley (UCB) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('lodash');
var assert = require('assert');

var TestsUtil = require('col-tests');

var AssetsTestUtil = require('./util');

describe('Assets', function() {

  describe('Create comment', function() {

    /**
     * Test that verifies that a new comment can be created
     */
    it('can be created', function(callback) {
      TestsUtil.getAssetLibraryClient(null, null, null, function(client1, course, user1) {
        AssetsTestUtil.assertCreateLink(client1, course, 'UC Davis', 'http://www.ucdavis.edu/', null, function(asset) {
          // Verify that the created asset has no comments
          AssetsTestUtil.assertGetAsset(client1, course, asset.id, null, asset, 0, function(asset) {

            // Create a new comment
            AssetsTestUtil.assertCreateComment(client1, course, asset.id, 'Comment 1', null, function(comment1) {

              // Verify that the comment is returned when retrieving the asset
              AssetsTestUtil.assertGetAsset(client1, course, asset.id, null, asset, 1, function(asset) {
                AssetsTestUtil.assertComment(asset.comments[0], comment1);

                // Verify that a second user can make a comment as well
                TestsUtil.getAssetLibraryClient(null, course, null, function(client2, course, user2) {
                  AssetsTestUtil.assertCreateComment(client2, course, asset.id, 'Comment 2', null, function(comment2) {
                    AssetsTestUtil.assertGetAsset(client2, course, asset.id, null, asset, 2, function(asset) {
                      AssetsTestUtil.assertComment(asset.comments[0], comment1);
                      AssetsTestUtil.assertComment(asset.comments[1], comment2);

                      return callback();
                    });
                  });
                });
              });
            });
          });
        });
      });
    });

    // Validation
    // Replies
  });
});

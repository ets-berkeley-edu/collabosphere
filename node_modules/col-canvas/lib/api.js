/**
 * Copyright 2015 UC Berkeley (UCB) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var Joi = require('joi');

var DB = require('col-core/lib/db');
var log = require('col-core/lib/logger')('col-canvas');

/**
 * Get a Canvas instance by its API domain and LTI key
 *
 * @param  {String}     apiDomain             The domain on which canvas is running
 * @param  {String}     ltiKey                The basic LTI key that will be used to embed the tools into Canvas
 * @param  {Function}   callback              Standard callback function
 * @param  {Object}     callback.err          An error object, if any
 * @param  {Canvas}     callback.canvas       The retrieved canvas instance
 */
var getCanvas = module.exports.getCanvas = function(apiDomain, ltiKey, callback) {
  // Parameter validation
  var validationSchema = Joi.object().keys({
    'apiDomain': Joi.string().required(),
    'ltiKey': Joi.string().alphanum().length(32)
  });

  var validationResult = Joi.validate({
    'apiDomain': apiDomain,
    'ltiKey': ltiKey
  }, validationSchema);

  if (validationResult.error) {
    return callback({'code': 400, 'msg': validationResult.error.details[0].message});
  }

  // Retrieve the Canvas instance from the DB
  var options = {
    'where': {
      'canvas_api_domain': apiDomain,
      'lti_key': ltiKey
    }
  };
  DB.Canvas.findOne(options).complete(function(err, canvas) {
    if (err) {
      log.error({'err': err, 'apiDomain': apiDomain}, 'Failed to get a Canvas instance');
      return callback({'code': 500, 'msg': err.message});
    } else if (!canvas) {
      log.warn({'err': err, 'apiDomain': apiDomain}, 'A canvas instance with the specified api domain and consumer lti key could not be found');
      return callback({'code': 404, 'msg': 'A canvas instance with the specified api domain and consumer lti key could not be found'});
    }

    return callback(null, canvas);
  });
};

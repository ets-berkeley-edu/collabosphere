/**
 * Copyright 2015 UC Berkeley (UCB) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('lodash');
var config = require('config');
var fs = require('fs');
var path = require('path');
var util = require('util');

var DB = require('./db');
var Modules = require('./modules');
var Server = require('./server');

var log = require('./logger')('col-core');

/**
 * Initialize the Collabosphere LTI tools
 *
 * @param  {Function}       callback            Standard callback function
 * @param  {Object}         callback.err        An error object, if any
 */
var init = module.exports.init = function(callback) {
  // Initialize the database
  DB.init(function() {
    // Initialize the modules
    Modules.init(function() {
      // Initialize the Express server
      initializeServer(callback);
    });
  });
};

/**
 * Initialize the Collabosphere app server and initialize the REST API endpoints
 *
 * @param  {Function}       callback            Standard callback function
 * @param  {Object}         callback.err        An error object, if any
 * @api private
 */
var initializeServer = function(callback) {
  // Initialize the Express server
  module.exports.appServer = Server.setUpServer();
  // Initialize the REST router wrapper
  module.exports.appRouter = Server.setupRouter(module.exports.appServer);

  // Check if a `rest.js` file exists in the `lib` folder in each
  // module. If such a file exists, we require it. This allows other
  // modules to add in their own REST apis
  var collabosphereModules = Modules.getAvailableModules();
  _.each(collabosphereModules, function(module) {
    var restFile = path.join(__dirname, '../..', module, '/lib/rest.js');
    if (fs.existsSync(restFile)) {
      log.debug({'module': module}, util.format('Registering REST APIs for %s', module));
      require(module + '/lib/rest');
    }
  });
  log.info('Finished initializing REST APIs');

  Server.postInitialize(module.exports.appServer, module.exports.appRouter);

  return callback();
};

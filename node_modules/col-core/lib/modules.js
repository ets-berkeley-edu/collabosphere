/**
 * Copyright 2015 UC Berkeley (UCB) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('lodash');
var fs = require('fs');
var path = require('path');
var util = require('util');

var log = require('./logger')('col-core/modules');

var cachedModules = [];

/**
 * Cache the available Collabosphere modules
 *
 * @param  {Function}       callback            Standard callback function
 * @param  {Object}         callback.err        An error object, if any
 */
var init = module.exports.init = function(callback) {
  // Get all the node modules
  var nodeModulesDir = getNodeModulesDir();
  fs.readdir(nodeModulesDir, function(err, modules) {
    if (err) {
      log.error({'err': err}, 'Unable to read the node modules directory');
      return callback({'code': 500, 'msg': 'Unable to read the node_modules directory'});
    }

    // Filter the available modules down to the Collabosphere modules. All Collabosphere
    // modules will begin with `col-`
    cachedModules =  _.filter(modules, function(module) {
      return module.match(/^col-.+$/);
    });

    return callback();
  });
};

/**
 * Get the available Collabosphere modules
 *
 * @return {String[]}                           The available Collabosphere modules
 */
var getAvailableModules = module.exports.getAvailableModules = function() {
  return cachedModules;
};

/**
 * Get the path to the node_modules directory
 *
 * @return {String}                             The path to the node_modules directory
 * @api private
 */
var getNodeModulesDir = function() {
  var dir = util.format('%s/../../../node_modules/', __dirname);
  return path.normalize(dir);
};

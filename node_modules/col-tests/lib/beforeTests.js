/**
 * Copyright 2015 UC Berkeley (UCB) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var assert = require('assert');

var Collabosphere = require('col-core');
var CollabosphereUtil = require('col-core/lib/util');
var DB = require('col-core/lib/db');

var TestsUtil = require('./util');

// Bootstrap the application server before the tests begin
before(function(callback) {
  // Start up the Collabosphere server
  Collabosphere.init(function(err) {
    assert.ok(!err);

    // Create 2 Canvas instances that can be used in the tests
    createCanvas(function(ucberkeleyCanvas) {
      createCanvas(function(ucdavisCanvas) {

        // Expose the Canvas instances on the global object
        global.tests = {
          'canvas': {
            'ucberkeley': ucberkeleyCanvas,
            'ucdavis': ucdavisCanvas
          }
        };
        return callback();
      });
    });
  });
});

after(function(callback) {
  Collabosphere.appServer.httpServer.close();
  return callback();
});

/**
 * Create a dummy canvas object
 *
 * @param  {Function}     callback              Standard callback function
 * @param  {Object}       callback.canvas       The created canvas object
 */
var createCanvas = function(callback) {
  DB.Canvas.build({
    'canvas_api_domain': CollabosphereUtil.generateString(10) + '.canvas.berkeley.edu',
    'api_key': CollabosphereUtil.generateString(32),
    'lti_key': CollabosphereUtil.generateString(32),
    'lti_secret': CollabosphereUtil.generateString(32)
  }).save().complete(function(err, canvas) {
    assert.ok(!err);
    return callback(canvas.toJSON());
  });
};
